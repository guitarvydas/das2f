Main [Name Parameters Imports Query Display]
= [[
temp=temp\${RANDOM}
${Name}
${Parameters}
cat >\${temp}.pl <<'~~~'
:- use_module(library(http/json)).
${Imports.trim ()}
query_helper(${support.formatParameters ()}):-
${Query.trim ()}
true.
query:-
bagof([${support.formatParameters ()}],query_helper(${support.formatParameters ()}),Bag),
json_write(user_output,Bag,[width(128)]).
~~~
cat >\${temp}.js <<'~~~'
const fs = require ('fs');
var rawText = fs.readFileSync ('/dev/fd/0');
var parameters = JSON.parse(rawText);
parameters.forEach (p => {
  ${support.formatJSParameters ()}
  console.log(\`${Display.trim ()}\`);
});
~~~
swipl -g "consult(\${temp})." -g 'query.' -g 'halt.' | node \${temp}.js
rm -f \${temp}.pl
rm -f \${temp}.js
]]

Name [ksharp line] =    [[# ${line}]]
    
Parameters [ksharp1 ksharp2 kparameters @lines]
  = {{ support.clearParameters (); }} [[]]

Imports [ksharp1 ksharp2 kimports @lines] = [[${lines}]]
  
Query [ksharp1 ksharp2 kquery @lines] = [[${lines}]]
  
Display [ksharp1 ksharp2 kdisplay line] = [[${line}]]
 
parameter [line] = [[${support.pushParameter (line)}]]
import [line] = [[?- consult(${line.trim()}).\n]]
query [line] = [[${line.trim()},\n]]
display [@lines] = [[${lines}]]

line [@cs nl] = [[${cs}${nl}]]

nl [c] = [[${c}]]
sharp [c] = [[${c}]]
notNL [c] = [[${c}]]
